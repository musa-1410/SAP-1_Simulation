$date
	Mon May 05 18:30:08 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module sap1_tb $end
$var wire 1 ! zero_flag $end
$var wire 4 " pc_out [3:0] $end
$var wire 1 # pc_jmp $end
$var wire 1 $ pc_inc $end
$var wire 8 % out_reg [7:0] $end
$var wire 1 & out_load $end
$var wire 1 ' mem_read $end
$var wire 8 ( mem_data_out [7:0] $end
$var wire 4 ) mar_out [3:0] $end
$var wire 4 * mar_addr_in [3:0] $end
$var wire 4 + ir_operand [3:0] $end
$var wire 4 , ir_opcode [3:0] $end
$var wire 2 - control_state [1:0] $end
$var wire 8 . b_reg_out [7:0] $end
$var wire 1 / b_load $end
$var wire 8 0 alu_result [7:0] $end
$var wire 3 1 alu_op [2:0] $end
$var wire 8 2 acc_out [7:0] $end
$var wire 1 3 acc_load $end
$var reg 1 4 clk $end
$var reg 1 5 reset $end
$scope module acc $end
$var wire 1 4 clk $end
$var wire 1 ! zero_flag $end
$var wire 8 6 data_in [7:0] $end
$var wire 1 3 acc_load $end
$var reg 8 7 acc_out [7:0] $end
$upscope $end
$scope module alu_inst $end
$var wire 8 8 a [7:0] $end
$var wire 3 9 op [2:0] $end
$var wire 8 : b [7:0] $end
$var reg 8 ; result [7:0] $end
$upscope $end
$scope module b_register $end
$var wire 1 4 clk $end
$var wire 8 < data_in [7:0] $end
$var wire 1 / b_load $end
$var reg 8 = data_out [7:0] $end
$upscope $end
$scope module control $end
$var wire 1 4 clk $end
$var wire 1 5 reset $end
$var wire 2 > state [1:0] $end
$var wire 1 ! zero_flag $end
$var wire 4 ? opcode [3:0] $end
$var parameter 2 @ DECODE $end
$var parameter 2 A EXECUTE $end
$var parameter 2 B FETCH $end
$var reg 1 3 acc_load $end
$var reg 3 C alu_op [2:0] $end
$var reg 1 / b_load $end
$var reg 2 D current_state [1:0] $end
$var reg 1 ' mem_read $end
$var reg 2 E next_state [1:0] $end
$var reg 1 & out_load $end
$var reg 1 $ pc_inc $end
$var reg 1 # pc_jmp $end
$upscope $end
$scope module ir $end
$var wire 1 4 clk $end
$var wire 1 ' ir_load $end
$var wire 8 F instr_in [7:0] $end
$var reg 4 G opcode [3:0] $end
$var reg 4 H operand [3:0] $end
$upscope $end
$scope module mar_inst $end
$var wire 4 I addr_in [3:0] $end
$var wire 1 4 clk $end
$var wire 1 ' mar_load $end
$var reg 4 J addr_out [3:0] $end
$upscope $end
$scope module mem $end
$var wire 4 K addr [3:0] $end
$var wire 1 4 clk $end
$var wire 8 L data_in [7:0] $end
$var wire 1 ' mem_read $end
$var wire 1 M mem_write $end
$var reg 8 N data_out [7:0] $end
$upscope $end
$scope module out_reg_inst $end
$var wire 1 4 clk $end
$var wire 8 O data_in [7:0] $end
$var wire 1 & out_load $end
$var reg 8 P data_out [7:0] $end
$upscope $end
$scope module pc $end
$var wire 1 4 clk $end
$var wire 4 Q jmp_addr [3:0] $end
$var wire 1 $ pc_inc $end
$var wire 1 # pc_jmp $end
$var wire 1 5 reset $end
$var reg 4 R pc_out [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b0 B
b10 A
b1 @
$end
#0
$dumpvars
b0 R
b0 Q
bx P
b0 O
b0 N
0M
b0 L
bx K
bx J
b0 I
b0 H
b0 G
b0 F
b1 E
b0 D
b0 C
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
15
04
03
b0 2
b0 1
b0 0
0/
b0 .
b0 -
b0 ,
b0 +
b0 *
bx )
b0 (
1'
0&
bx %
0$
0#
b0 "
1!
$end
#5000
b0 )
b0 J
b0 K
bx (
bx <
bx F
bx N
14
#10000
04
#15000
bx Q
b1 E
1'
bx +
bx H
bx ,
bx ?
bx G
b1010 (
b1010 <
b1010 F
b1010 N
14
#20000
04
05
#25000
b1010 *
b1010 I
b1010 Q
b10 E
0'
b1010 +
b1010 H
b0 ,
b0 ?
b0 G
b1 -
b1 >
b1 D
14
#30000
04
#35000
b0 E
1$
13
1'
b10 -
b10 >
b10 D
14
#40000
04
#45000
b1 *
b1 I
b1 E
03
1'
0$
b1010 )
b1010 J
b1010 K
b0 -
b0 >
b0 D
b1 "
b1 R
14
#50000
04
#55000
b1010 *
b1010 I
b10 E
0'
b1 )
b1 J
b1 K
b1 -
b1 >
b1 D
14
#60000
04
#65000
b0 E
1$
13
1'
b10 -
b10 >
b10 D
14
#70000
04
#75000
b10 *
b10 I
b1 E
03
1'
0$
b11011 (
b11011 <
b11011 F
b11011 N
b1010 )
b1010 J
b1010 K
b10 "
b10 R
b0 -
b0 >
b0 D
14
#80000
04
#85000
b1011 *
b1011 I
b1011 Q
b10 E
0'
b10 )
b10 J
b10 K
b1010 (
b1010 <
b1010 F
b1010 N
b1011 +
b1011 H
b1 ,
b1 ?
b1 G
b1 -
b1 >
b1 D
14
#90000
04
#95000
b0 E
1$
13
1/
1'
b10 -
b10 >
b10 D
14
#100000
04
#105000
b11 *
b11 I
b1010 Q
b1010 0
b1010 6
b1010 ;
b1 E
0/
03
1'
0$
b1011 )
b1011 J
b1011 K
b101100 (
b101100 <
b101100 F
b101100 N
b1010 +
b1010 H
b0 ,
b0 ?
b0 G
b1010 .
b1010 :
b1010 =
b0 -
b0 >
b0 D
b11 "
b11 R
14
#110000
04
#115000
b1100 *
b1100 I
b1100 Q
b10 E
0'
b1100 +
b1100 H
b10 ,
b10 ?
b10 G
b101 (
b101 <
b101 F
b101 N
b11 )
b11 J
b11 K
b1 -
b1 >
b1 D
14
#120000
04
#125000
b11110110 0
b11110110 6
b11110110 ;
b0 E
1$
13
b1 1
b1 9
b1 C
1/
1'
b10 -
b10 >
b10 D
14
#130000
04
#135000
b100 *
b100 I
b11111011 0
b11111011 6
b11111011 ;
b101 Q
b1 E
b0 1
b0 9
b0 C
0/
03
1'
0$
0!
b11110110 2
b11110110 7
b11110110 8
b11110110 O
b101 .
b101 :
b101 =
b101 +
b101 H
b0 ,
b0 ?
b0 G
b111101 (
b111101 <
b111101 F
b111101 N
b1100 )
b1100 J
b1100 K
b100 "
b100 R
b0 -
b0 >
b0 D
14
#140000
04
#145000
b1101 *
b1101 I
b1101 Q
b10 E
0'
b100 )
b100 J
b100 K
b11 (
b11 <
b11 F
b11 N
b1101 +
b1101 H
b11 ,
b11 ?
b11 G
b1 -
b1 >
b1 D
14
#150000
04
#155000
b100 0
b100 6
b100 ;
b0 E
1$
13
b10 1
b10 9
b10 C
1/
1'
b10 -
b10 >
b10 D
14
#160000
04
#165000
b101 *
b101 I
b11 Q
b111 0
b111 6
b111 ;
b1 E
b0 1
b0 9
b0 C
0/
03
1'
0$
b1101 )
b1101 J
b1101 K
b1001110 (
b1001110 <
b1001110 F
b1001110 N
b11 +
b11 H
b0 ,
b0 ?
b0 G
b11 .
b11 :
b11 =
b100 2
b100 7
b100 8
b100 O
b0 -
b0 >
b0 D
b101 "
b101 R
14
#170000
04
#175000
b1110 *
b1110 I
b1110 Q
b10 E
0'
b1110 +
b1110 H
b100 ,
b100 ?
b100 G
b1100 (
b1100 <
b1100 F
b1100 N
b101 )
b101 J
b101 K
b1 -
b1 >
b1 D
14
#180000
04
#185000
b0 E
1$
13
b11 1
b11 9
b11 C
1/
1'
b10 -
b10 >
b10 D
14
#190000
04
#195000
b110 *
b110 I
b10011 0
b10011 6
b10011 ;
b1100 Q
b1 E
b0 1
b0 9
b0 C
0/
03
1'
0$
b111 2
b111 7
b111 8
b111 O
b1100 .
b1100 :
b1100 =
b1100 +
b1100 H
b0 ,
b0 ?
b0 G
b1011111 (
b1011111 <
b1011111 F
b1011111 N
b1110 )
b1110 J
b1110 K
b110 "
b110 R
b0 -
b0 >
b0 D
14
#200000
04
#205000
b1111 *
b1111 I
b1111 Q
b10 E
0'
b110 )
b110 J
b110 K
b11 (
b11 <
b11 F
b11 N
b1111 +
b1111 H
b101 ,
b101 ?
b101 G
b1 -
b1 >
b1 D
14
#210000
04
#215000
b1011 0
b1011 6
b1011 ;
b0 E
1$
13
b100 1
b100 9
b100 C
1/
1'
b10 -
b10 >
b10 D
14
#220000
04
#225000
b111 *
b111 I
b11 Q
b1110 0
b1110 6
b1110 ;
b1 E
b0 1
b0 9
b0 C
0/
03
1'
0$
b1111 )
b1111 J
b1111 K
b1101000 (
b1101000 <
b1101000 F
b1101000 N
b11 +
b11 H
b0 ,
b0 ?
b0 G
b11 .
b11 :
b11 =
b1011 2
b1011 7
b1011 8
b1011 O
b0 -
b0 >
b0 D
b111 "
b111 R
14
#230000
04
#235000
b1000 *
b1000 I
b1000 Q
b10 E
0'
b1000 +
b1000 H
b110 ,
b110 ?
b110 G
b101 (
b101 <
b101 F
b101 N
b111 )
b111 J
b111 K
b1 -
b1 >
b1 D
14
#240000
04
#245000
b0 E
1#
b10 -
b10 >
b10 D
14
#250000
04
#255000
b1 E
1'
0#
b1000 "
b1000 R
b0 -
b0 >
b0 D
14
#260000
04
#265000
b101 *
b101 I
b101 Q
b10 E
0'
b1000 )
b1000 J
b1000 K
b1110000 (
b1110000 <
b1110000 F
b1110000 N
b101 +
b101 H
b0 ,
b0 ?
b0 G
b1 -
b1 >
b1 D
14
#270000
04
#275000
b0 E
1$
13
1'
b10 -
b10 >
b10 D
14
#280000
04
#285000
b1001 *
b1001 I
b0 Q
b10001 0
b10001 6
b10001 ;
b1 E
03
1'
0$
b101 )
b101 J
b101 K
b11100000 (
b11100000 <
b11100000 F
b11100000 N
b0 +
b0 H
b111 ,
b111 ?
b111 G
b1110 2
b1110 7
b1110 8
b1110 O
b0 -
b0 >
b0 D
b1001 "
b1001 R
14
#290000
04
#295000
b0 *
b0 I
b10 E
0'
b1110 ,
b1110 ?
b1110 G
b1011111 (
b1011111 <
b1011111 F
b1011111 N
b1001 )
b1001 J
b1001 K
b1 -
b1 >
b1 D
14
#300000
04
#305000
b0 E
1$
1&
b10 -
b10 >
b10 D
14
#310000
04
#315000
b1010 *
b1010 I
b1 E
1'
0&
0$
b1110 %
b1110 P
b1010 "
b1010 R
b0 -
b0 >
b0 D
14
#320000
04
#325000
b1111 *
b1111 I
b1111 Q
b10 E
0'
b1010 )
b1010 J
b1010 K
b11110000 (
b11110000 <
b11110000 F
b11110000 N
b1111 +
b1111 H
b101 ,
b101 ?
b101 G
b1 -
b1 >
b1 D
14
#330000
04
#335000
b1101 0
b1101 6
b1101 ;
b0 E
1$
13
b100 1
b100 9
b100 C
1/
1'
b10 -
b10 >
b10 D
14
#340000
04
#345000
b1011 *
b1011 I
b0 Q
b11111101 0
b11111101 6
b11111101 ;
b1 E
b0 1
b0 9
b0 C
0/
03
1'
0$
b1111 )
b1111 J
b1111 K
b1010 (
b1010 <
b1010 F
b1010 N
b0 +
b0 H
b1111 ,
b1111 ?
b1111 G
b11110000 .
b11110000 :
b11110000 =
b1101 2
b1101 7
b1101 8
b1101 O
b0 -
b0 >
b0 D
b1011 "
b1011 R
14
#350000
04
#355000
b1010 *
b1010 I
b1010 Q
b10 E
0'
b1010 +
b1010 H
b0 ,
b0 ?
b0 G
b101 (
b101 <
b101 F
b101 N
b1011 )
b1011 J
b1011 K
b1 -
b1 >
b1 D
14
#360000
04
#365000
b0 E
1$
13
1'
b10 -
b10 >
b10 D
14
#370000
04
#375000
b1100 *
b1100 I
b11101101 0
b11101101 6
b11101101 ;
b101 Q
b1 E
03
1'
0$
b11111101 2
b11111101 7
b11111101 8
b11111101 O
b101 +
b101 H
b1010 )
b1010 J
b1010 K
b1100 "
b1100 R
b0 -
b0 >
b0 D
14
#380000
04
#385000
b101 *
b101 I
b10 E
0'
b1100 )
b1100 J
b1100 K
b1010 (
b1010 <
b1010 F
b1010 N
b1 -
b1 >
b1 D
14
#390000
04
#395000
b0 E
1$
13
1'
b10 -
b10 >
b10 D
14
#400000
04
#405000
b1101 *
b1101 I
b1010 Q
b11011101 0
b11011101 6
b11011101 ;
b1 E
03
1'
0$
b101 )
b101 J
b101 K
b11 (
b11 <
b11 F
b11 N
b1010 +
b1010 H
b11101101 2
b11101101 7
b11101101 8
b11101101 O
b0 -
b0 >
b0 D
b1101 "
b1101 R
14
#410000
04
#415000
b11 *
b11 I
b11 Q
b10 E
0'
b11 +
b11 H
b1011111 (
b1011111 <
b1011111 F
b1011111 N
b1101 )
b1101 J
b1101 K
b1 -
b1 >
b1 D
14
#420000
04
